[["index.html", "A Minimal Book Example Chapter 1 About 1.1 Usage 1.2 Render book 1.3 Preview book", " A Minimal Book Example John Doe 2023-12-08 Chapter 1 About This is a sample book written in Markdown. You can use anything that Pandoc’s Markdown supports; for example, a math equation \\(a^2 + b^2 = c^2\\). 1.1 Usage Each bookdown chapter is an .Rmd file, and each .Rmd file can contain one (and only one) chapter. A chapter must start with a first-level heading: # A good chapter, and can contain one (and only one) first-level heading. Use second-level and higher headings within chapters like: ## A short section or ### An even shorter section. The index.Rmd file is required, and is also your first book chapter. It will be the homepage when you render the book. 1.2 Render book You can render the HTML version of this example book without changing anything: Find the Build pane in the RStudio IDE, and Click on Build Book, then select your output format, or select “All formats” if you’d like to use multiple formats from the same book source files. Or build the book from the R console: bookdown::render_book() To render this example to PDF as a bookdown::pdf_book, you’ll need to install XeLaTeX. You are recommended to install TinyTeX (which includes XeLaTeX): https://yihui.org/tinytex/. 1.3 Preview book As you work, you may start a local server to live preview this HTML book. This preview will update as you edit the book when you save individual .Rmd files. You can start the server in a work session by using the RStudio add-in “Preview book,” or from the R console: bookdown::serve_book() "],["curriculum-vitae.html", "Chapter 2 Curriculum Vitae 2.1 Opleidingen 2.2 Werk 2.3 Talen 2.4 Vaardigheden", " Chapter 2 Curriculum Vitae Adres: ****** Telefoon: *********** Mail: Twan.samsom@student.hu.nl Geboortedatum: ********** Ik ben een enthousiaste derdejaarsstudent Life Sciences aan de Hogeschool Utrecht, met een sterke focus op biologie en data science. Ik heb ervaring opgedaan in diverse projecten, waar ik o.a. mijn data-analysevaardigheden inzet. 2.1 Opleidingen Hogeschool Utrecht . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9/2023 – Heden Minor: Data Sciences for Biology Vakken: Data Analysis Using R, Advanced bioinformatica. Projecten Project RNA sequencing: Het effect van BCLXL en ONECUT1 op de genexpressie van fibroblasten, Beschrijving: Gebruik van R, R packages zoals: DESeq2 en ggplot, en het uitvoeren van een GO term enrichment analysis. Project Metagenomics: Identificatie van bacteriesoorten Beschrijving: Identificeren van bacteriën in een monster met gebruik van Kraken2 en Bracken voor metagenomics analyse. Hogeschool Utrecht . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9/2021 – Heden Biologie en Medisch Laboratoriumonderzoek (Life Sciences) . . . . . . . Verwachte afstudeerdatum: 8/2025 Vakken: Data Science, Statistiek &amp; Excel. Projecten Project Data Science: Het effect van PFOS op de genexpressie van ACOX1, Beschrijving: Onderzoek naar het effect van PFOS op genexpressie, met gebruik van BASH voor data-manipulatie en JASP voor statistiek. Project Farmacon: Het effect van Donepezil op kunstmatig geïnduceerde paralyse in CL4176 C. elegans Beschrijving: Onderzoek naar het effect van Donepezil op amyloïde plaquevorming. Gebruik van de ingebouwde ImageJ macrofunctie om een klein script te schrijven voor de automatisering van data-analysestappen. Propedeuse Hogeschool Utrecht . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Behaald in 2022 Biologie en Medisch Laboratoriumonderzoek (Life Sciences) Minkema College (havo) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9/2015 – 7/2021 Profiel N&amp;G / N&amp;T MBO Rijnland . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9/2020 – 7/2021 Certificaat Biologie VWO 2.2 Werk Pizzeria Bella Milano, Woerden . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 04/2019 – Heden Opnemen en verwerken van bestellingen Bestellingen klaar maken en bezorgen Onderhouden van de website 2.3 Talen Nederlands (Moedertaal) Engels (Vloeiend) 2.4 Vaardigheden Programmeertalen R BASH Rapportage en Presentatie rmarkdown voor het maken van dynamische rapporten Data Analyse Ervaring met data-analyse en statistiek in R Gebruik van ggplot2 voor datavisualisatie Tekstmanipulatie Schrijven van BASH-scripts/pipelines Gebruik van AWK voor tekstmanipulatie Specifieke Libraries DESeq2: Differentiële expressie-analyse Kraken2: Identificatie van bacteriën in metagenomics tidyverse: Een verzameling van R-packages voor data science en data wrangling 2023-11-26 "],["cross.html", "Chapter 3 Cross-references 3.1 Chapters and sub-chapters 3.2 Captioned figures and tables", " Chapter 3 Cross-references Cross-references make it easier for your readers to find and link to elements in your book. 3.1 Chapters and sub-chapters There are two steps to cross-reference any heading: Label the heading: # Hello world {#nice-label}. Leave the label off if you like the automated heading generated based on your heading title: for example, # Hello world = # Hello world {#hello-world}. To label an un-numbered heading, use: # Hello world {-#nice-label} or {# Hello world .unnumbered}. Next, reference the labeled heading anywhere in the text using \\@ref(nice-label); for example, please see Chapter 3. If you prefer text as the link instead of a numbered reference use: any text you want can go here. 3.2 Captioned figures and tables Figures and tables with captions can also be cross-referenced from elsewhere in your book using \\@ref(fig:chunk-label) and \\@ref(tab:chunk-label), respectively. See Figure 3.1. par(mar = c(4, 4, .1, .1)) plot(pressure, type = &#39;b&#39;, pch = 19) Figure 3.1: Here is a nice figure! Don’t miss Table 3.1. knitr::kable( head(pressure, 10), caption = &#39;Here is a nice table!&#39;, booktabs = TRUE ) Table 3.1: Here is a nice table! temperature pressure 0 0.0002 20 0.0012 40 0.0060 60 0.0300 80 0.0900 100 0.2700 120 0.7500 140 1.8500 160 4.2000 180 8.8000 "],["parts.html", "Chapter 4 Parts", " Chapter 4 Parts You can add parts to organize one or more book chapters together. Parts can be inserted at the top of an .Rmd file, before the first-level chapter heading in that same file. Add a numbered part: # (PART) Act one {-} (followed by # A chapter) Add an unnumbered part: # (PART\\*) Act one {-} (followed by # A chapter) Add an appendix as a special kind of un-numbered part: # (APPENDIX) Other stuff {-} (followed by # A chapter). Chapters in an appendix are prepended with letters instead of numbers. "],["sql.html", "Chapter 5 SQL 5.1 Getting the data 5.2 Tidy the data 5.3 Using SQL and R to inspect data 5.4 Summarzing flu and dengue 5.5 Merging the tables 5.6 Creating some plots", " Chapter 5 SQL N.B. some of the steps are done using an connection to a local postgres database, because these wouldn’t work in an R markdown they are replaced by screenshots. 5.1 Getting the data First we need to get the data for the exercise, we use wget to download them from github. # Go to data_raw cd data_raw/ # Download the flu dataset wget -O flu_data.csv https://raw.githubusercontent.com/DataScienceILC/tlsc-dsfb26v-20_workflows/main/data/flu_data.csv # Download the dengue dataset wget -O dengue_data.csv https://raw.githubusercontent.com/DataScienceILC/tlsc-dsfb26v-20_workflows/main/data/dengue_data.csv 5.2 Tidy the data Its important to make the data tidy so every table matches structure wise, in these steps we also make some changes to make merging later easier. #load needed libraries library(tidyr) library(dplyr) library(RPostgreSQL) library(dslabs) # Load the different data flu_data &lt;- read.csv(&quot;data_raw/flu_data.csv&quot;, skip = 11) # skip = 11 to skip the first 11 lines which contain metadata dengue_data &lt;- read.csv(&quot;data_raw/dengue_data.csv&quot;, skip = 11) gapminder_data &lt;- as_tibble(gapminder) ## flu_data # Make flu_data tidy tidy_flu_data &lt;- flu_data %&gt;% pivot_longer(cols = -Date, names_to = &quot;country&quot;, values_to = &quot;cases&quot;) # Split Date into year, month, day tidy_flu_data &lt;- tidy_flu_data %&gt;% separate(Date, into = c(&quot;year&quot;, &quot;month&quot;, &quot;day&quot;), sep = &quot;-&quot;) # Convert year into factor tidy_flu_data$year &lt;- as.factor(tidy_flu_data$year) # flu_data uses dots instead of spaces in country names (New.Zealand) # So to make joining the tables easier we need to replace the dots with spaces tidy_flu_data$country &lt;- gsub(&quot;\\\\.&quot;, &quot; &quot;, tidy_flu_data$country) # turn country into factor tidy_flu_data$country &lt;- factor(tidy_flu_data$country) # dengue_data # Make dengue_data tidy tidy_dengue_data &lt;- dengue_data %&gt;% pivot_longer(cols = -Date, names_to = &quot;country&quot;, values_to = &quot;cases&quot;) # Split Date into year, month, day tidy_dengue_data &lt;- tidy_dengue_data %&gt;% separate(Date, into = c(&quot;year&quot;, &quot;month&quot;, &quot;day&quot;), sep = &quot;-&quot;) # Convert year into factor tidy_dengue_data$year &lt;- as.factor(tidy_dengue_data$year) # turn country into factor tidy_dengue_data$country &lt;- factor(tidy_dengue_data$country) # Save tidy_dengue_data write.csv(tidy_dengue_data, &quot;data/tidy_dengue_data.csv&quot;) saveRDS(tidy_dengue_data, &quot;data/tidy_dengue_data.rds&quot;) # Save tidy_flu_data write.csv(tidy_flu_data, &quot;data/tidy_flu_data.csv&quot;) saveRDS(tidy_flu_data, &quot;data/tidy_flu_data.rds&quot;) # Save clean gapminder_data write.csv(gapminder_data, &quot;data/tidy_gapminder_data.csv&quot;) saveRDS(gapminder_data, &quot;data/tidy_gapminder_data.rds&quot;) The chunck beneath is to create an connection object, that can be used to connect to a Postgres database. # Load packages library(RPostgreSQL) library(DBI) # Create connection object to connect to local PostgreSQL database con &lt;- dbConnect(RPostgres::Postgres(), dbname = &quot;workflowsdb&quot;, host=&quot;localhost&quot;, port=&quot;5432&quot;, user=&quot;postgres&quot;, password=&quot;PASSWORD&quot;) This chunck would normaly create tables in the postgres database. # Load tidy_flu_data into Postgres database dbWriteTable(con, &quot;tidy_flu_data&quot;, as.data.frame(tidy_flu_data), overwrite = TRUE) # Load tidy_dengue_data into Postgres database dbWriteTable(con, &quot;tidy_dengue_data&quot;, as.data.frame(tidy_dengue_data), overwrite = TRUE) # Load gapminder_data into Postgres database dbWriteTable(con, &quot;gapminder_data&quot;, as.data.frame(gapminder_data), overwrite = TRUE) 5.3 Using SQL and R to inspect data We use both SQL and R to inspect the data in the same way 5.3.1 Gapminder Here we order the gapminder data by life expactancy. Using R with the same goal. gapminder_data %&gt;% arrange(desc(life_expectancy)) ## # A tibble: 10,545 × 9 ## country year infant_mortality life_expectancy fertility population gdp ## &lt;fct&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Hong Kong,… 2016 NA 83.9 NA NA NA ## 2 Hong Kong,… 2015 NA 83.7 1.17 7287983 NA ## 3 Hong Kong,… 2014 NA 83.6 1.15 7226869 NA ## 4 Hong Kong,… 2013 NA 83.4 1.14 7163930 NA ## 5 Iceland 2014 1.6 83.3 2.07 327318 NA ## 6 Iceland 2015 1.6 83.3 2.06 329425 NA ## 7 Iceland 2016 NA 83.3 NA NA NA ## 8 Japan 2016 NA 83.3 NA NA NA ## 9 Hong Kong,… 2012 NA 83.2 1.12 7101858 NA ## 10 Iceland 2013 1.6 83.2 2.08 325392 NA ## # … with 10,535 more rows, and 2 more variables: continent &lt;fct&gt;, region &lt;fct&gt; 5.3.2 Flu Here we select only the cases in France from the flu data. Again using R for the same goal. tidy_flu_data %&gt;% filter(tolower(country) == &#39;france&#39; &amp; !is.na(cases)) %&gt;% arrange(year, month, day) ## # A tibble: 620 × 5 ## year month day country cases ## &lt;fct&gt; &lt;chr&gt; &lt;chr&gt; &lt;fct&gt; &lt;int&gt; ## 1 2003 09 28 France 25 ## 2 2003 10 05 France 25 ## 3 2003 10 12 France 30 ## 4 2003 10 19 France 81 ## 5 2003 10 26 France 82 ## 6 2003 11 02 France 48 ## 7 2003 11 09 France 146 ## 8 2003 11 16 France 274 ## 9 2003 11 23 France 877 ## 10 2003 11 30 France 1282 ## # … with 610 more rows 5.3.3 Dengue Here we sort dengue by cases from high to low. And again R for the same goal. tidy_dengue_data %&gt;% filter(!is.na(cases)) %&gt;% arrange(desc(cases)) ## # A tibble: 6,263 × 5 ## year month day country cases ## &lt;fct&gt; &lt;chr&gt; &lt;chr&gt; &lt;fct&gt; &lt;dbl&gt; ## 1 2004 02 29 Indonesia 1 ## 2 2005 09 11 Singapore 1 ## 3 2008 04 06 Brazil 1 ## 4 2009 02 08 Bolivia 1 ## 5 2009 05 03 Argentina 1 ## 6 2009 09 27 Mexico 1 ## 7 2010 05 30 Venezuela 1 ## 8 2010 08 29 Philippines 1 ## 9 2012 10 21 India 1 ## 10 2013 07 14 Thailand 1 ## # … with 6,253 more rows Here you can see that in every country, the highest case is 1 because the data is relative per country. The day where there were the most Google searches about dengue is labeled as one, and the day with the fewest is labeled as 0. Every other day is on the scale between those. 5.4 Summarzing flu and dengue Both the flu and dengue data have datapoints every day, while gapminder has a datapoint for every year. Before we can join flu and dengue with gapminder we first have to summarize the data so flu and dengue to have a datapoint for every year. For flu we can just take the total of every case, hence we use sum in the summarize function. summarized_flu_data &lt;- tidy_flu_data %&gt;% mutate(Date = as.Date(paste(year, month, day, sep = &quot;-&quot;))) %&gt;% group_by(country, year) %&gt;% summarize(total_cases_flu = sum(cases, na.rm = TRUE)) %&gt;% ungroup() For dengue, we need to calculate the average because the data is on a scale where 1 represents the highest search activity in a country, and 0 represents the lowest. Therefore, we use the mean function in the summarize function. summarized_dengue_data &lt;- tidy_dengue_data %&gt;% mutate(Date = as.Date(paste(year, month, day, sep = &quot;-&quot;))) %&gt;% group_by(country, year) %&gt;% summarize(avg_cases_dengue = mean(cases, na.rm = TRUE)) %&gt;% ungroup() Now we load the new summarized files into the database. # Load summarized_flu_data dbWriteTable(con, &quot;summarized_flu_data&quot;, as.data.frame(summarized_flu_data), overwrite = TRUE) # Load summarized_dengue_data dbWriteTable(con, &quot;summarized_dengue_data&quot;, as.data.frame(summarized_dengue_data), overwrite = TRUE) 5.5 Merging the tables Normally this could be used to merge the tables and load the table into R. # SQL to merge tables sql_query &lt;- &quot; SELECT COALESCE(d.country, f.country) AS merged_country, COALESCE(d.year, f.year::text) AS merged_year, d.avg_cases_dengue, f.total_cases_flu, g.* FROM summarized_dengue_data AS d FULL JOIN summarized_flu_data AS f ON d.year = f.year::text AND d.country = f.country JOIN gapminder_data AS g ON COALESCE(d.year, f.year::text) = g.year::text AND COALESCE(d.country, f.country) = g.country ORDER BY COALESCE(d.avg_cases_dengue, 0) DESC, COALESCE(f.total_cases_flu, 0) DESC; &quot; # Export table to R merged_table &lt;- dbGetQuery(con, sql_query) summary(merged_table) Because we can’t use SQL we just load the merged table in using R, and create a summary of the data. merged_table &lt;- readRDS(&quot;data/merged_table.rds&quot;) summary(merged_table) ## merged_country merged_year avg_cases_dengue total_cases_flu ## Length:490 Length:490 Min. :0.0108 Min. : 0 ## Class :character Class :character 1st Qu.:0.0796 1st Qu.: 1696 ## Mode :character Mode :character Median :0.1216 Median : 6772 ## Mean :0.1363 Mean : 20147 ## 3rd Qu.:0.1772 3rd Qu.: 24975 ## Max. :0.5355 Max. :155577 ## NA&#39;s :360 NA&#39;s :84 ## country year infant_mortality life_expectancy ## Length:490 Min. :2002 Min. : 2.00 Min. :52.50 ## Class :character 1st Qu.:2005 1st Qu.: 4.00 1st Qu.:73.20 ## Mode :character Median :2008 Median : 7.60 Median :76.50 ## Mean :2008 Mean :12.61 Mean :75.84 ## 3rd Qu.:2012 3rd Qu.:15.88 3rd Qu.:80.50 ## Max. :2015 Max. :62.00 Max. :83.20 ## ## fertility population gdp continent ## Min. :1.150 Min. :3.324e+06 Min. :7.214e+09 Length:490 ## 1st Qu.:1.430 1st Qu.:9.241e+06 1st Qu.:8.430e+10 Class :character ## Median :1.850 Median :3.001e+07 Median :2.193e+11 Mode :character ## Mean :1.945 Mean :8.865e+07 Mean :7.992e+11 ## 3rd Qu.:2.288 3rd Qu.:8.051e+07 3rd Qu.:5.853e+11 ## Max. :3.980 Max. :1.311e+09 Max. :1.174e+13 ## NA&#39;s :141 ## region ## Length:490 ## Class :character ## Mode :character ## ## ## ## 5.6 Creating some plots We now use the merged table to create some plots to visualize the data. Create boxplot of life expectancy per continent. library(ggplot2) # Boxplot of Life Expectancy by Continent ggplot(merged_table, aes(x = continent, y = life_expectancy, fill = continent)) + geom_boxplot() + labs(title = &quot;Boxplot of Life Expectancy by Continent&quot;, x = &quot;Continent&quot;, y = &quot;Life Expectancy&quot;) + theme_minimal() + scale_fill_discrete(name = &quot;Continent&quot;) Linegraph for dengue cases in Brazil, Argentina and Bolivia. # chosen 3 random countries selected_countries &lt;- c(&quot;Brazil&quot;, &quot;Argentina&quot;, &quot;Bolivia&quot;) filtered_data_dengue &lt;- merged_table[merged_table$country %in% selected_countries, ] # Line plot of Dengue cases for Brazil, Argentina and Bolivia ggplot(filtered_data_dengue, aes(x = year, y = avg_cases_dengue, color = country)) + geom_line() + labs(title = &quot;Dengue Cases Over the Years (Selected Countries)&quot;, x = &quot;Year&quot;, y = &quot;Average Dengue Cases&quot;, color = &quot;Country&quot;) + theme_minimal() ## Warning: Removed 1 row(s) containing missing values (geom_path). Flu cases per capita per country. # Filter data to exclude NA values filtered_data &lt;- merged_table %&gt;% filter(!is.na(total_cases_flu) &amp; !is.na(population)) # Divide the cases by the population filtered_data$flu_ratio &lt;- filtered_data$total_cases_flu / filtered_data$population # Create a box plot ggplot(filtered_data, aes(x = merged_country, y = flu_ratio)) + geom_boxplot() + labs(title = &quot;Distribution of Flu Cases per Population per Country&quot;, x = &quot;Country&quot;, y = &quot;Flu Cases per Population&quot;) + theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Make readable "],["blocks.html", "Chapter 6 Blocks 6.1 Equations 6.2 Theorems and proofs 6.3 Callout blocks", " Chapter 6 Blocks 6.1 Equations Here is an equation. \\[\\begin{equation} f\\left(k\\right) = \\binom{n}{k} p^k\\left(1-p\\right)^{n-k} \\tag{6.1} \\end{equation}\\] You may refer to using \\@ref(eq:binom), like see Equation (6.1). 6.2 Theorems and proofs Labeled theorems can be referenced in text using \\@ref(thm:tri), for example, check out this smart theorem 6.1. Theorem 6.1 For a right triangle, if \\(c\\) denotes the length of the hypotenuse and \\(a\\) and \\(b\\) denote the lengths of the other two sides, we have \\[a^2 + b^2 = c^2\\] Read more here https://bookdown.org/yihui/bookdown/markdown-extensions-by-bookdown.html. 6.3 Callout blocks The R Markdown Cookbook provides more help on how to use custom blocks to design your own callouts: https://bookdown.org/yihui/rmarkdown-cookbook/custom-blocks.html "],["sharing-your-book.html", "Chapter 7 Sharing your book 7.1 Publishing 7.2 404 pages 7.3 Metadata for sharing", " Chapter 7 Sharing your book 7.1 Publishing HTML books can be published online, see: https://bookdown.org/yihui/bookdown/publishing.html 7.2 404 pages By default, users will be directed to a 404 page if they try to access a webpage that cannot be found. If you’d like to customize your 404 page instead of using the default, you may add either a _404.Rmd or _404.md file to your project root and use code and/or Markdown syntax. 7.3 Metadata for sharing Bookdown HTML books will provide HTML metadata for social sharing on platforms like Twitter, Facebook, and LinkedIn, using information you provide in the index.Rmd YAML. To setup, set the url for your book and the path to your cover-image file. Your book’s title and description are also used. This gitbook uses the same social sharing data across all chapters in your book- all links shared will look the same. Specify your book’s source repository on GitHub using the edit key under the configuration options in the _output.yml file, which allows users to suggest an edit by linking to a chapter’s source file. Read more about the features of this output format here: https://pkgs.rstudio.com/bookdown/reference/gitbook.html Or use: ?bookdown::gitbook "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
